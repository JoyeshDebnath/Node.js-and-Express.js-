What is Node ?
>> Node js is an environment to run js Outside of the browser 
With node js we built server side apps. It has no access to browser apis as it does not run on browser It runs outside of the browser  

Diff between the Browser and Node js apps. 

Browser Apps:
-------------------
It has access to all DOM,Window object ,Does not have any access to File system ,It depends on Browser ie if the user running on another browser then the application might break down because of the diff version.

NodeJS app 
--------------------------------

Node js apps does not have access t DOM,Window object,But it has 
all access to file systems ,System information.These app are server side apps which runs on server does not depends on browser depends on Node version.

/*   */
__dirname - Path to the current  directory
__filename - File name 
require- Function to use modules (CommonJS)
module- info about the current module (file )
process - info about the environment where the program is being  executed
/*             */

If we execute the command :  console.log(module )  we get the following ::
ðŸ˜¯   ðŸ˜¯    ðŸ˜¯     ðŸ˜¯    ðŸ˜¯    ðŸ˜¯
Module {
  id: '.',
  path: 'C:\\Users\\KIIT\\Desktop\\Backend Practice\\Sample_codes',
  exports: {},
  filename: 'C:\\Users\\KIIT\\Desktop\\Backend Practice\\Sample_codes\\4-Names.js',
  loaded: false,
  children: [],
  paths: [
    'C:\\Users\\KIIT\\Desktop\\Backend Practice\\Sample_codes\\node_modules',
    'C:\\Users\\KIIT\\Desktop\\Backend Practice\\node_modules',
    'C:\\Users\\KIIT\\Desktop\\node_modules',
    'C:\\Users\\KIIT\\node_modules',
    'C:\\Users\\node_modules',
    'C:\\node_modules'
  ]
}
ðŸ˜¯    ðŸ˜¯    ðŸ˜¯    ðŸ˜¯    ðŸ˜¯   ðŸ˜¯ 

In above the exports is responsible for a pretty cool thing .. what ever we include inside exports it is going to be accessible everywhere . 


>>Inorder to share the data between the modules we use ::  
  ## module.exports={sharable object properties }

  >> inorder to access the data shared we use:: 
  ## const var_name=require('./file path of data');



  Alternative method of exporting  
  ------------------------------------------

  You can also try one of the following alternative methods of exporting data in Node ðŸ‘‡ðŸ‘‡: 

  1>module.exports.shared_property=[some property];
                   OR 
  2>const my_object={some property};
  module.exports.shared_object=my_object;


  Built_IN_MODULES in NODE.js ðŸ‘‡ðŸ‘‡: 
  >>OS
  >>PATH
  >>FS
  >>Http

  1>OS module : It provides many functions to interact with the the operating system and server.

  2>Path module provides a no of different functions to interact with the file and folder paths.
  